multiprocessing 模块创建进程
	
	1. 需要将要执行的事情封装为函数
	2. 使用multiprocessing模块中Process类创建进程对象
	3. 通过对象属性设置和 process的初始化函数对进程进行设置,绑定要执行的函数
	4. 启动进程,会自动执行进程绑定的函数
	5. 完成进程的回收

	Process()
		功能:创建进程对象
		参数:name	进程名称 Process-1
			target	绑定函数
			args	元组 给target函数按照位置传参
			kwargs	字典 给target函数按照键值对传参

	p.start()
		功能:启动进程
		* target函数会自动执行,此时进程真正被创建

	p.join([timeout])
		功能:阻塞等待回收子进程
		参数:超时时间

	示例:见process2.py

	* 使用multiprocessing创建子进程,同样子进程复制父进程的全部代码段,父子进程各自执行互不影响,父子进程有各自的运行空间

	* 如果不使用join回收子进程则子进程退出后会成为僵尸进程
	* 使用multiprocessing 创建子进程;父进程往往只是用来创建进程,回收进程

注意事项:

	* 1. 如果子进程从父进程拷贝对象,对象和网络或者文件相关联,那么父子进程会使用同一套对象属性,相互有一定的关联性
	* 2. 如果在子进程中单独创建对象,则和父进程完全没有关联